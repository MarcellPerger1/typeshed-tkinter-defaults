name: Get defaults on CI

on:
  workflow_dispatch:

jobs:
  build-defaults:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]
        os: 
          - "ubuntu-latest"
          - "windows-latest"
          - "macos-latest"
          # TODO: whenever the available runners change, these need to be updated
          - "ubuntu-20.04"
          - "windows-2019"
          - "macos-11"
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ !(startswith(matrix.os, 'macos-') && contains('3.9;3.10', matrix.python-version)) }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: (Ubuntu) Install Xvfb
      shell: bash
      if: ${{ startswith(matrix.os, 'ubuntu-') }}
      run: sudo apt-get install -y xvfb
    - name: (MacOS, <3.11) Fix Python's tkinter
      shell: bash
      if: ${{ startswith(matrix.os, 'macos-') && contains('3.9;3.10', matrix.python-version) }}
      run: |
        brew install tcl-tk pyenv openssl readline sqlite3 xz zlib
        env \
          PATH="$(brew --prefix tcl-tk)/bin:$PATH" \
          LDFLAGS="-L$(brew --prefix tcl-tk)/lib" \
          CPPFLAGS="-I$(brew --prefix tcl-tk)/include" \
          PKG_CONFIG_PATH="$(brew --prefix tcl-tk)/lib/pkgconfig" \
          CFLAGS="-I$(brew --prefix tcl-tk)/include" \
          PYTHON_CONFIGURE_OPTS="--with-tcltk-includes='-I$(brew --prefix tcl-tk)/include' --with-tcltk-libs='-L$(brew --prefix tcl-tk)/lib -ltcl8.6 -ltk8.6'" \
          pyenv install ${{matrix.python-version}}
        pyenv global ${{matrix.python-version}}
    - name: Run python script (with fallbacks)
      id: run_main__${{ matrix.python-version }}__${{ matrix.os }}
      shell: bash {0}
      run: |
        EXIT_XVFB=9
        EXIT_FALLBACK=9
        echo "Running normally"
        python -m write_curr_defaults
        EXIT_NORMAL=$?
        if [ "$EXIT_NORMAL" -ne "0" ] ; then
          echo "Trying to start Xvfb"
          type Xvfb
          Xvfb :0 -screen 0 1024x768x16 &
          EXITSTATUS_XVFB=$?
          if [ "$EXITSTATUS_XVFB" -ne "0" ] ; then
            echo "Couldn't run Xvfb"
            EXIT_XVFB="$EXITSTATUS_XVFB"
          else
            sleep 2
            ps aux | grep Xvfb
            echo "Running under Xvfb"
            DISPLAY=:0.0 python -m write_curr_defaults
            EXIT_XVFB=$?
          fi
          if [ "$EXIT_XVFB" -ne "0" ] ; then
            echo "Running fallback"
            TK_DEFAULTS_FALLBACK=1 python -m write_curr_defaults
            EXIT_FALLBACK=$?
          fi
        fi
        if [ "$EXIT_NORMAL" -eq "0" ] || [ "$EXIT_XVFB" -eq "0" ] || [ "$EXIT_FALLBACK" -eq "0" ] ; then
          FILENAME=$(cat ./curr_out_filename.txt)
          if [ -z "$FILENAME" ] ; then
            echo "Error: curr_out_filename not set"
            exit 1
          fi
          echo "outfile_name=$FILENAME"
          echo "outfile_name=$FILENAME" >> "GITHUB_OUTPUT"
          exit 0
        else
          exit 1
        fi
    - name: Upload artifact for the defaults
      uses: actions/upload-artifact@v4
      with:
        name: "_out_tkinter_defaults__${{ matrix.os }}_${{ matrix.python-version }}"
        path: "tkinter_defaults_curr.json"
    - name: Debug
      shell: bash
      env:
        OF: ${{ steps[format("run_main__{0}__{1}", matrix.python-version, matrix.os)].outputs.outfile_name }}
      run: |
        echo "${{ steps.run_main.outputs.outfile_name }}"
        echo $OF
    - name: Upload artifact for merge step
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps[format("run_main__{0}__{1}", matrix.python-version, matrix.os)].outputs.outfile_name }}
        path: "tkinter_defaults_curr.json"
  # Collect and commit results from the other runs
  commit-results:
    needs:
      - "build-defaults"
    permissions:
      contents: write
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: "./downloaded_artifacts"
          pattern: "default*.json"
      - name: Write downloaded artifacts to tkinter_defaults
        run: python -m write_downloaded_artifacts
      - name: Merge defaults
        run: python -m merge_defaults
      - name: Upload defaults
        if: ${{ matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11' }}
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: Upload defaults [bot]
          commit_author: "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
          file_pattern: "merged_defaults/*.json tkinter_defaults/**/*.json"
